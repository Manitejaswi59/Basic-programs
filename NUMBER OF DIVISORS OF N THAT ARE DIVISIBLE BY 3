//Finding the divisors by just iterating the loop for 1 to n i.e the given number it costs so much time
//To avoid it we have iterates the code for squareroot of n time to do this observe the above code


#include<bits/stdc++.h>
using namespace std;


class Solution
{
	public:
		int count_divisors(int n)
		{
		    int i=1;
		    int count = 0;
		    for(int i=1;i<=sqrt(n);i++)
            {
                if(n%i==0){
                if(i%3==0)
                 count=count+1;
                if((n/i)%3==0)
                {
                    if(i!=(n/i))
                        count=count+1;
                }
                }
            }
		    return count;
		}
};
//{ Driver Code Starts.
int main(){
    int T;
    cin >> T;
    while(T--)
    {
    	int n;
    	cin >> n;
    	Solution ob;
    	int ans = ob.count_divisors(n);
    	cout << ans << "\n";
    }
	return 0;
}
